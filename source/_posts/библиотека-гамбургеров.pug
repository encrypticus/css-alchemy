---
title: 'Библиотека гамбургеров'
date: 2020-04-04 14:00:42
tags:
- scss
- sass
- libs
categories:
- препроцессоры
- scss
- библиотеки
thumbnail: /css-alchemy/thumbnails/hamburgers.jpg
include_post_style: post
include_post_script: post
---
include ../../themes/alchemy/layout/components/hamburger/hamburger
include ../../themes/alchemy/layout/components/heading/heading
p.post__text
  | Вдохновившись <a href="https://github.com/jonsuh/hamburgers">этой</a> небольшой CSS-библиотекой решил написать подобную, но
  | со своими эффектами. Итак, встречайте - Magic burgers.
  | Magic burgers - это небольшая css/scss-библиотека анимированных гамбургер-меню. Помимо css-файла также включает исходные sass-файлы.
  | Библиотека модульная и настраиваемая, что позволяет вам приготовить свой собственный гамбургер!
  | Гамбургеры на изображении ниже кликабелны.

mixin effect-name(name)
  h3.effect-name= name

section.hamburger-table
  .hamburger-table__col
    +effect-name('simple')
    +hamburger

  .hamburger-table__col
    +effect-name('collapse')
    +hamburger('collapse')

  .hamburger-table__col
    +effect-name('storm')
    +hamburger('storm')

  .hamburger-table__col
    +effect-name('juggler')
    +hamburger('juggler')

  .hamburger-table__col
    +effect-name('shurikens')
    +hamburger('shurikens')

  .hamburger-table__col
    +effect-name('shurikens-r')
    +hamburger('shurikens-r')

  .hamburger-table__col
    +effect-name('shurikens-alt')
    +hamburger('shurikens-alt')

  .hamburger-table__col
    +effect-name('shurikens-alt-r')
    +hamburger('shurikens-alt-r')

  .hamburger-table__col
    +effect-name('minify')
    +hamburger('minify')

  .hamburger-table__col
    +effect-name('arrowturn')
    +hamburger('arrowturn')

  .hamburger-table__col
    +effect-name('arrowturn-r')
    +hamburger('arrowturn-r')

  .hamburger-table__col
    +effect-name('arrowdown')
    +hamburger('arrowdown')

  .hamburger-table__col
    +effect-name('arrowdown-r')
    +hamburger('arrowdown-r')

  .hamburger-table__col
    +effect-name('magic')
    +hamburger('magic')

  .hamburger-table__col
    +effect-name('3d')
    +hamburger('3d')

  .hamburger-table__col
    +effect-name('alchemy')
    +hamburger('alchemy')

  .hamburger-table__col
    +effect-name('alchemy-r')
    +hamburger('alchemy-r')

-
  function replacement(str) {
    let result = str.replace(/</g, '&lt;');
    return result;
  }

  const styleMarkup = `<link href="dist/hamburger.css" rel="stylesheet">`;

  const scriptMarkup = `<script src="js/hamburger.js"></script>`;

  const burgerMarkup = `
  <button class="hamburger">
    <span class="hamburger-inner">
      <span class="line-top">
        <span class="line-top-left"></span>
        <span class="line-top-right"></span>
      </span>
      <span class="line-center">
        <span class="line-center-left"></span>
        <span class="line-center-right"></span>
      </span>
      <span class="line-bottom">
        <span class="line-bottom-left"></span>
        <span class="line-bottom-right"></span>
      </span>
    </span>
  </button>
  `;

  const burgerMarkup2 = `
  <button class="hamburger hamburger--arrowdown">
    <span class="hamburger-inner">
      <span class="line-top">
        <span class="line-top-left"></span>
        <span class="line-top-right"></span>
      </span>
      <span class="line-center">
        <span class="line-center-left"></span>
        <span class="line-center-right"></span>
      </span>
      <span class="line-bottom">
        <span class="line-bottom-left"></span>
        <span class="line-bottom-right"></span>
      </span>
    </span>
  </button>
  `;

  const burgerMarkup3 = `
  <button class="hamburger hamburger--arrowdown is-active">
    <span class="hamburger-inner">
      <span class="line-top">
        <span class="line-top-left"></span>
        <span class="line-top-right"></span>
      </span>
      <span class="line-center">
        <span class="line-center-left"></span>
        <span class="line-center-right"></span>
      </span>
      <span class="line-bottom">
        <span class="line-bottom-left"></span>
        <span class="line-bottom-right"></span>
      </span>
    </span>
  </button>
  `;

p.post__text
    | Для того, чтобы начать использовать библиотеку, клонируйте <a href="https://github.com/encrypticus/magic-burgers">этот</a>
    | репозиторий на свой компьютер или загрузите его как zip-архив. Затем в секции <span class="code">&lt;head &gt;</span> на странице вашего сайта вставьте
    | следующий код:

pre
  code.html
    != replacement(styleMarkup)

p.post__text
  | Затем на страницу вашего сайта добавьте следующую разметку:

pre
  code.html
    != replacement(burgerMarkup)

p.post__text
  | Добавьте название класса того типа гамбургера, который вам нужен:

pre
  code.html
    != replacement(burgerMarkup2)

p.post__text
  | Доступны следующие классы:

pre
  code
    |hamburger--3d
    |hamburger--alchemy
    |hamburger--alchemy-r
    |hamburger--arrowdown
    |hamburger--arrowdown-r
    |hamburger--arrowturn
    |hamburger--arrowturn-r
    |hamburger--collapse
    |hamburger--juggler
    |hamburger--magic
    |hamburger--minify
    |hamburger--shurikens
    |hamburger--shurikens-r
    |hamburger--shurikens-alt
    |hamburger--shurikens-alt-r
    |hamburger--simple
    |hamburger--storm

p.post__text
  | Чтобы переключить состояние гамбургера, добавьте класс <span class="code">is-active</span>:

pre
  code
    != replacement(burgerMarkup3)

p.post__text
  | Поскольку имя класса должно переключаться с помощью JavaScript, в директории <span class="code">js/hamburger.js</span> находится файл <span class="code">hamburger.js</span>,
  | код в котором предназначен для этого. Просто подключите его на странице вашего сайта перед закрывающим тегом <span class="code">&lt;/body&gt;</span>, вставив следующий код:

pre
  code
    != replacement(scriptMarkup)

p.post__text
  | Также, если вы используете препроцессор pug, в директории <span class="code">pug</span> находится файл <span class="code">hamburger.pug</span> с примесью,
  | создающей разметку для гамбургера. Подключив файл с примесью в своем коде, вы можете вызвать ее следующим образом:

pre
  code
    |+hamburger("class name")

p.post__text
  | Где <span class="code">class name</span> - это название класса того типа гамбургера, который вам нужен. Например:

pre
  code
    |+hamburger("3d")
    |+hamburger("alchemy")
    |+hamburger("juggler")
    |+hamburger("shurikens-alt-r")

+heading('Sass', 'sidebar')(style="color: black;")
p.post__text(style="margin-bottom: 15px;")
  | Исходные файлы <span class="code">.scss</span> доступны, если вы используете препроцессор Sass. Это дает вам гибкость и модульность.

ul.post__list
  li Скопируйте файлы из директории <span class="code">sass</span> в ваш проект
  li
    span.post__list-item-span Импортируйте файл <span class="code">hamburger.scss</span> внутри вашего scss-файла стилей:
    pre
      code @import "path/to/hamburger";
  li Настройте свой гамбургер - удалите те типы в файле <span class="code">hamburger.scss</span>, которые вы не планиуете использовать.

+heading('Кастомизация', 'sidebar')(style="color: black;")
p.post__text
  | Чтобы переопределить настройки по умолчанию, объявите их перед импортом гамбургеров:

pre
  code
    |$hamburger-layer-width: 30px;
    |$hamburger-layer-height: 3px;
    |$hamburger-layer-spacing: 5px;

    |@import "hamburger";

p.post__text
  | Вы также можете создать отдельный файл (например, <span class="code">hamburger-settings.scss</span>) с этими настройками, а затем импортировать
  | его перед гамбургерами:

pre
  code
    |@import "hamburger-settings";
    |@import "hamburger";

p.post__text
  | Вот полный список настроек по умолчанию (находится в <span class="code">sass/hamburger.scss</span>):

pre
  code
    |$hamburger-layer-width        : 40px;
    |$hamburger-layer-height       : 4px;
    |$hamburger-layer-spacing      : 6px;
    |$hamburger-padding            : 10px;
    |$hamburger-layer-border-radius: 4px;
    |$hamburger-layer-color        : #000;

    |// Удалите или закомментироуйте типы гамбургеров, которые вам не нужны
    |// чтобы они были исключены из скомпилированного CSS.
    |$hamburger-types: (
    |simple,
    |collapse,
    |storm,
    |juggler,
    |shurikens,
    |shurikens-r,
    |shurikens-alt,
    |shurikens-alt-r,
    |minify,
    |arrowturn,
    |arrowturn-r,
    |arrowdown,
    |arrowdown-r,
    |magic,
    |alchemy,
    |alchemy-r
    |);

+heading('Поддержка браузерами', 'sidebar')(style="color: black;")
p.post__text
  | Некоторые анимации используют CSSPerspective API, который на момент написания данной статьи не поддерживается в IE и Firefox.
  | Для подробной информации воспользуйтесь <a href="https://caniuse.com/#search=perspective">caniuse.com</a>.